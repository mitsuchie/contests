#include <iostream>
#include <vector>
#include <list>
#include <set>
#include <queue>
#include <map>
#include <algorithm>
#include <functional>
#include <string>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <tuple>
using namespace std;

#define REP(i,p,n) for(ll i=p;i<ll(n);++i)
#define rep(i,n) REP(i,0,n)

using ll = long long int;
using pll = pair<ll, ll>;

const ll mod = static_cast<ll>(1e9) + 7;

ll H, W, K;

const ll MAXH = 10;
string S[MAXH];

ll N[MAXH];
ll M[MAXH];

int main()
{
    cin >> H >> W >> K;
    rep (i, H) { cin >> S[i]; }

    ll ans = H * W + 1;

    // 横の区切り生成
    for (ll i=0;i<(1<<(H-1));++i)
    {
        rep (j, H) { N[j] = 0; }

        ll res = 0;
        rep (j, H) { res += (i>>j)&1; }

        for (ll x=0;x<W;++x)
        {
            ll ni = 0;
            rep (j, H) { M[j] = 0; }

            for (ll y=0;y<H;++y)
            {
                // ホワイトチョコが見つかった
                if (S[y][x] == '1') { ++M[ni]; }

                // 横の区切りが見つかった
                if ((i>>y)&1) { ++ni; }

                // 失敗させる
                if (M[ni] > K) { res = H * W; }
            }

            bool isOver = false;

            const ll nn = ni + 1;

            rep (j, nn)
            {
                N[j] += M[j];
                if (N[j] > K) { isOver = true; }
            }

            if (isOver)
            {
                ++res;
                rep (j, nn) { N[j] = M[j]; }
            }
        }

        ans = min(ans, res);
    }

    cout << ans << endl;

    return 0;
}
