#include <iostream>
#include <vector>
#include <list>
#include <set>
#include <queue>
#include <map>
#include <algorithm>
#include <functional>
#include <string>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <tuple>
using namespace std;

#define REP(i,p,n) for(int i=p;i<n;++i)
#define rep(i,n) REP(i,0,n)

using ll = long long int;
using pll = pair<ll, ll>;

int N;

const int MAXN = 100000;
ll C[MAXN];
ll A[MAXN], B[MAXN];

pll R[MAXN];
ll CC[MAXN];

int main()
{
    cin >> N;

    rep(i, N - 1)
    {
        cin >> A[i] >> B[i];
        --A[i];
        --B[i];

        ++R[A[i]].first;
        ++R[B[i]].first;
    }

    rep(i, N)
    {
        cin >> C[i];
    }

    rep(i, N)
    {
        R[i].second = i;
    }

    sort(R, R + N);
    sort(C, C + N);
    reverse(C, C + N);

    rep (i, N)
    {

    }


    ll ans = 0;

    rep (i, N)
    {
        cout << R[i].first << " " << R[i].second << " " << C[R[i].second] << endl;
    }

    rep (i, N - 1)
    {
        const auto ca = C[R[A[i]].second];
        const auto cb = C[R[B[i]].second];

        printf("min(%lld, %lld)=%lld\n", ca, cb, min(ca, cb));
        ans += min(ca, cb);
    }

    cout << ans << endl;

    rep (i, N)
    {
        cout << C[i];
        if (i + 1 == N) { cout << endl; } else { cout << ' '; }
    }

    return 0;
}
